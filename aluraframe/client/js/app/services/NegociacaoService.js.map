{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_httpService","Promise","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","object","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from \"./HttpService\";\r\nimport {ConnectionFactory} from \"./ConnectionFactory\";\r\nimport {NegociacaoDao} from \"../dao/NegociacaoDao\";\r\nimport {Negociacao} from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._httpService = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n            this.obterNegociacoesSemana(),\r\n            this.obterNegociacoesSemanaAnterior(),\r\n            this.obterNegociacoesSemanaRetrasada()\r\n        ])\r\n            .then(periodos => {\r\n                let negociacoes = periodos\r\n                    .reduce((dados, periodo) => dados.concat(periodo), []);\r\n                return negociacoes;\r\n            })\r\n            .catch(erro => {\r\n                throw new Error(erro);\r\n            })\r\n    }\r\n\r\n    obterNegociacoesSemana() {\r\n        return this._httpService\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(object => new Negociacao(new Date(object.data), object.quantidade, object.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            })\r\n    }\r\n\r\n    obterNegociacoesSemanaAnterior() {\r\n        return this._httpService\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(object => new Negociacao(new Date(object.data), object.quantidade, object.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            })\r\n    }\r\n\r\n    obterNegociacoesSemanaRetrasada() {\r\n        return this._httpService\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(object => new Negociacao(new Date(object.data), object.quantidade, object.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            })\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível adicionar a negociação');\r\n            })\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações')\r\n            });\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagaddas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível excluir as negociações');\r\n            })\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        negociacao.isEquals(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível importar as negociações');\r\n            })\r\n    }\r\n\r\n}"]}